<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ =============================================================================
  ~ BeoBasis: a library of common routines for Java programs written by
  ~           Beowurks.
  ~ =============================================================================
  ~ Copyright(c) 2001-2019, by Beowurks.
  ~
  ~ This application is open-source software; you can redistribute it and/or modify it
  ~ under the terms of the Eclipse Public License, Version 1.0 (http://opensource.org/licenses/EPL-1.0).
  ~
  ~ Original Author:  Eddie Fann
  ~ Contributor(s):   -;
  -->

<project name="BeoBasis" default="build">

  <property name="root.path" value=".."/>

  <property name="includeantruntime" value="false"/>
  <property name="dirs.base" value="${root.path}"/>
  <property name="src" value="${dirs.base}/src"/>

  <property name="idea.out.path" value="${root.path}/out"/>
  <property name="project.output.dir" value="${idea.out.path}/production/BeoBasis"/>

  <property name="project.title" value="BeoBasis"/>
  <property name="project.name" value="BeoBasis"/>
  <property name="project.version" value="2.0.5"/>
  <property name="project.jar.filename" value="${project.name}-${project.version}.jar"/>
  <property name="project.jar.filename.unsigned" value="${project.name}-unsigned.jar"/>

  <property name="project.jar" value="${root.path}/${project.jar.filename}"/>

  <property name="IDE.WorkSpace.Root" value="d:/Eclipse"/>
  <property name="ExternalLibraryPath" value="${IDE.WorkSpace.Root}/ExternalLibraries"/>
  <property name="zip.files.dir" value="${IDE.WorkSpace.Root}/ZipFiles/${project.name}"/>

  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>

  <tstamp>
    <format property="buildtime.isoformat" pattern="yyyy-MM-dd HH:mm:ss"/>
  </tstamp>

  <echo level="info">Java Version ${ant.java.version}</echo>
  <echo level="info">Ant Version ${ant.version}</echo>
  <echo level="info">Ant Home ${ant.home}</echo>

  <target depends="buildManifest, buildClasses, buildJar, signJar, buildZip, copyAppFiles" name="build"/>

  <!-- Recreate the manifest for the project -->
  <target name="buildManifest">
    <manifest file="${src}/META-INF/Manifest.mf">
      <attribute name="Manifest-Version" value="1.0"/>
      <attribute name="Implementation-Vendor" value="Beowurks"/>
      <attribute name="Implementation-Version" value="${project.version}"/>
      <attribute name="Implementation-Title" value="${project.title}"/>
      <attribute name="Built-On" value="${buildtime.isoformat}"/>
      <attribute name="Permissions" value="all-permissions"/>
      <attribute name="Application-Name" value="${project.name}"/>
      <attribute name="Codebase" value="*"/>
    </manifest>
  </target>

  <!-- Build all of the classes. -->
  <target name="buildClasses">
    <!-- I want all files recompiled each time. -->
    <delete>
      <fileset dir="${src}" includes="**/*.class"/>
    </delete>

    <mkdir dir="${project.output.dir}"/>

    <javac srcdir="${src}" destdir="${project.output.dir}" debug="false" includeantruntime="false">
      <compilerarg value="-Xlint"/>
    </javac>

    <copy todir="${project.output.dir}">
      <fileset dir="${src}">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>

  </target>

  <!-- Remove then create the project Jar file -->
  <target name="buildJar">
    <delete>
      <fileset dir="${root.path}/" includes="${project.name}*.jar"/>
    </delete>

    <jar destfile="${project.jar}" basedir="${project.output.dir}" manifest="${src}/META-INF/MANIFEST.MF"
         excludes="**/*.bak **/*.java manifest.txt build.xml **/*.classpath **/*.project **/*.prefs"
    >
    </jar>
  </target>

  <target name="signJar">
    <!-- The BeoBasis-version.jar will be uploaded to the web. However, -->
    <!-- I'm generating both BeoBasis-unsigned.jar and BeoBasis-version.jar in the project
            directory -->
    <!-- as the IntelliJ library setting refers to BeoBasis.jar. This way, everytime
            I change the version, I don't have to change the reference. -->
    <copy file="${root.path}/${project.jar.filename}" tofile="${root.path}/${project.jar.filename.unsigned}"/>

    <!--
        http://ant.apache.org/manual/CoreTasks/ant.html
        If you use location rather than value, the absolute file path is used
        which is needed by the GenerateKey build.xml.
    -->
    <ant inheritAll="false" antfile="${IDE.WorkSpace.Root}/WorkSpace/Stamp/build.xml" inheritrefs="false">
      <property name="sign.project.jars" value="${project.jar.filename}"/>
      <property name="sign.project.dir" location="${root.path}"/>
    </ant>
  </target>

  <!-- Now create the Zip file with the relevant source code in ${IDE.WorkSpace.Root}/ZipFiles
        directory. -->
  <!-- Now create the Zip file with the relevant source code in ${IDE.WorkSpace.Root}/ZipFiles directory. -->
  <target name="buildZip">
    <mkdir dir="${zip.files.dir}"/>

    <delete>
      <fileset dir="${zip.files.dir}" includes="*.*"/>
    </delete>

    <zip zipfile="${zip.files.dir}/${project.name}-${project.version}-src.zip" basedir="${src}"
         excludes="**/*.bak **/*.class manifest.txt **/*.classpath **/*.project **/*.prefs build"/>
  </target>

  <!-- Now copy program files to ${IDE.WorkSpace.Root}/ZipFiles directory. -->
  <target name="copyAppFiles">
    <copy file="${root.path}/${project.jar.filename}" todir="${zip.files.dir}"/>
  </target>

</project>
